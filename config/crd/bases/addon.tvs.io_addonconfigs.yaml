---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: addonconfigs.addon.tvs.io
spec:
  group: addon.tvs.io
  names:
    kind: AddonConfig
    listKind: AddonConfigList
    plural: addonconfigs
    singular: addonconfig
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: AddonConfig is the Schema for the addonconfigs API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AddonConfigSpec defines the desired state of AddonConfig
            properties:
              target:
                description: Target defines the CAPI cluster target for this instance
                  of the AddonConfig.
                properties:
                  name:
                    description: Explicit name of the Cluster that this addon config
                      is targeting. Mutually exclusive with the selector.
                    type: string
                  selector:
                    description: Label selector to match a Cluster that this addonn
                      config is targeting Mutually exclusive with the explicit cluster
                      name.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector
                            that contains values, a key, and an operator that relates
                            the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: operator represents a key's relationship
                                to a set of values. Valid operators are In, NotIn,
                                Exists and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If
                                the operator is In or NotIn, the values array must
                                be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced
                                during a strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: matchLabels is a map of {key,value} pairs. A
                          single {key,value} in the matchLabels map is equivalent
                          to an element of matchExpressions, whose key field is "key",
                          the operator is "In", and the values array contains only
                          "value". The requirements are ANDed.
                        type: object
                    type: object
                    x-kubernetes-map-type: atomic
                type: object
              type:
                description: Type is the name of the AddonConfigDefinition that this
                  AddonConfig is validated against
                type: string
              values:
                description: Values describes the fields to be validated and marshalled
                  with the AddonConfigDefinition defined in type
                x-kubernetes-preserve-unknown-fields: true
            required:
            - target
            type: object
          status:
            description: AddonConfigStatus defines the observed state of AddonConfig
            properties:
              conditions:
                description: Conditions define the current state of the AddonConfig
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of
                        Reason code, so the users or machines can immediately understand
                        the current situation and act accordingly. The Severity field
                        MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              fieldErrors:
                additionalProperties:
                  properties:
                    detail:
                      type: string
                    type:
                      description: ErrorType is a machine readable value providing
                        more detail about why a field is invalid.  These values are
                        expected to match 1-1 with CauseType in api/types.go.
                      type: string
                  required:
                  - detail
                  - type
                  type: object
                description: FieldErrors define any existing schema validation errors
                  in the AddonConfig
                type: object
              observedGeneration:
                description: ObservedGeneration is the latest generation observed
                  by the controller.
                format: int64
                type: integer
              observedSchemaGeneration:
                description: ObservedSchemaGeneration is the latest generation of
                  the schema observed by the controller
                format: int64
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
